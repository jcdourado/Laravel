-- Cap1 

laravel new nomeProjeto

php artisan serve

Artisan - ferramenta ja inclusa no laravel

-- Cap2

php artisan app:name nomeProjeto - Mudar namespace

Rotas:
	Arquivo: app/Http/routes.php

	Route::get('urlAcessada',funcao que retorna a pagina)

-- Cap3

Controllers - Dentro de app/Http/Controllers e deve herdar de Controller ( Nao esquecer o namespace )

DB - configurar o .env

Utilizar o 'Illuminate\Support\Facades\DB' para fazer selects, updates, inserts com metodos estáticos;

-- Cap4

Models - Dentro de app/ e deve herdar de Model ( com o namespace )

php artisan make:model nomeClasse
php artisan make:controller nomeClasse

Para mudar o nome da Model no BD é so criar um "protected $table = 'nomeTable'"

php artisan make:model nomeClasse -m (cria o migration da classe)

No migration - o up é para criar a tabela e o down para destrui-la

php artisan migrate - executa as migrations
php artisan migrate:rollback - faz rollback

Seeders : alimentar a tabela - Colocar no mesmo arquivo que o DatabaseSeeder e extender de Seeder

php artisan db:seed 

-- Cap5

View cria na : resources/views e chama no controller por view('nome')

AppDebug=true no .env

Para acessar variaveis na view : view('nome')->with('nome',$varLocal); ou ->withProdutos($var) ou return view('nomeView',$array)

view()->file('outroCaminho');

Colocar o css do public do https://github.com/Turini/estoque-laravel no public

-- Cap6

Para pegar os parametros URL: Resquest::input('valor','default') (use Request)

Para ver se tem na URL: Request::has('param')

Request:all() - retorna um array com todos os param

Request::only('param') -> apenas o parametro

Request::except('ee') -> exceto esse param

Request::route('kk') -> pega o parametro de sessao 

No route, se colocar {'param?'} fica opcional

No metodo do route pode coloca um parametro que ele recebe

Juntamente ao get do Route pode chamar o metodo where('param','RegEx')

-- Cap7

Blade : template engine

Definir um layout como principal e as secoes

@yield('nome') -> define um local para jogar conteudo

@extends('nome') -> em qual arquivo deve aparecer

@section('nome') -> onde jogar

@stop

{{ }} - area para printar (da pra usar 'or' e outras condicoes caso nao exista algo)

@for, foreach, while, forelse - empty(caso nao tenha nada) , if - else elseif,

-- Cap8

Query builder: como o hibernate - passa um array, com os nomes dos campos e os valores a entrarem

Metodos Route : get, post, any

Para usar post  tem que colcoar um input hidden com o nome _token e com o value chamado csrf_token()

return redirect('/pagina') - redireciona para outra page

redirect('/page')->whitInput() -> manda os inputs - para acessa -> old('nome')
